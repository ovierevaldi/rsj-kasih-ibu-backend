// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model jenis_pengobatan {
  id Int @id @default(autoincrement())
  createdBy String @db.VarChar(255) @default("")
  modifiedBy String @db.VarChar(255) @default("")
  nama_pengobatan String @db.VarChar(255)

  pendaftaran Pendaftaran[]

  jadwal_pengobatan JadwalPengobatan[]
}

model dokter {
  id Int @id @default(autoincrement())
  createdBy String @db.VarChar(255) @default("")
  modifiedBy String @db.VarChar(255) @default("")
  nama String @db.VarChar(255)

  pendaftaran Pendaftaran[]

  jadwal_pengobatan JadwalPengobatan[]
}

model metode_pembayaran {
  id Int @id @default(autoincrement())
  createdBy String @db.VarChar(255) @default("")
  modifiedBy String @db.VarChar(255) @default("")
  nama String @db.VarChar(255)

  pendaftaran Pendaftaran[]
}

model Pendaftaran {
  id Int @id @default(autoincrement())
  createdBy String @db.VarChar(255) @default("")
  modifiedBy String @db.VarChar(255) @default("")
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)

  nomor_pendaftaran String @db.VarChar(255)
  nama_pasien String @db.VarChar(255)
  tanggal_lahir DateTime @db.Date
  tempat_lahir String @db.VarChar(255)
  jenis_kelamin String @db.VarChar(10)
  alamat String @db.Text
  keluhan String @db.Text
 
  waktu_pengobatan DateTime @db.Timestamp() 

  //Foreign Keys and Relations
  jenis_pengobatan_id Int
  jenis_pengobatan jenis_pengobatan @relation(fields: [jenis_pengobatan_id], references: [id])

  dokter_pengobatan_id Int
  dokter dokter @relation(fields: [dokter_pengobatan_id], references: [id])

  metode_pembayaran_id Int
  metode_pembayaran metode_pembayaran @relation(fields: [metode_pembayaran_id], references: [id])
}

model JadwalPengobatan {
  id Int @id @default(autoincrement())
  createdBy String @db.VarChar(255) @default("")
  modifiedBy String @db.VarChar(255) @default("")
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)

  tanggal DateTime @db.Timestamp() 

  //Foreign Keys and Relations
  id_pengobatan Int
  jenis_pengobatan jenis_pengobatan @relation(fields: [id_pengobatan], references: [id])

  id_dokter Int
  dokter dokter @relation(fields: [id_dokter], references: [id])
}